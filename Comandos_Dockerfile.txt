vi /etc/inputrc

###################
## 1 comando sÃ³
apt update;apt  install -y docker.io;apt clean;docker volume create portainer_data && docker run -d -p 8000:8000 -p 9443:9443 --cpus=0.1 --memory=128m --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer:latest;cd /;rm -Rfv python_bsc;git clone https://github.com/RoneyVM/python_bsc.git;cd /python_bsc;docker build -t shieldtokencoin/python:1.0 .;CONTAINER_ID='80' && docker run -d -p $CONTAINER_ID:80 --cpus=0.3 --memory=256m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;CONTAINER_ID='81' && docker run -d -p $CONTAINER_ID:80 --cpus=0.3 --memory=256m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
############################################
#####################
## REMOVE O DOCKER
#docker stop portainer;docker rm portainer;docker rmi -f portainer/portainer;
apt-get purge -y docker docker.io docker-ce;apt-get autoremove -y --purge docker docker.io docker-ce;rm -rf /var/lib/docker /etc/docker;rm /etc/apparmor.d/docker;groupdel docker;rm -rf /var/run/docker.sock;
#############################################

echo 3 > /proc/sys/vm/drop_caches;sysctl -w vm.drop_caches=3;swapoff -a && swapon -a;clear;echo "Limpeza do Cache e Swap efetuada com sucesso"

############# AQUIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII
apt update;apt  install -y docker.io;apt clean;apt -y autoremove;docker volume create portainer_data && docker run -d -p 8000:8000 -p 9443:9443 --cpus=0.1 --memory=128m --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer:latest;cd /;rm -Rfv python_bsc;git clone https://github.com/RoneyVM/python_bsc.git;cd /python_bsc;docker build -t shieldtokencoin/python:1.0 .;docker run -d --cpus=1.8 --memory=4098m --name python_wallet_random_1 --restart always shieldtokencoin/python:1.0;docker run -d --cpus=1.2 --memory=4098m --name python_wallet_random_2 --restart always shieldtokencoin/python:1.0;

################
## PORTAINER - GCP-SRV1 - 34.130.104.8
## PORTAINER - GCP-SRV2 - 34.130.72.204
## PORTAINER - GCP-SRV3 - 34.130.176.43
## PORTAINER - GCP-SRV4 - 34.68.232.140
## PORTAINER - GCP-SRV5 - 34.171.26.249
apt update;apt  install -y docker.io;apt clean;apt -y autoremove;docker volume create portainer_data && docker run -d -p 8000:8000 -p 9443:9443 --cpus=0.1 --memory=128m --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer:latest;cd /;rm -Rfv python_bsc;git clone https://github.com/RoneyVM/python_bsc.git;cd /python_bsc;docker build -t shieldtokencoin/python:1.0 .;CONTAINER_ID='80' && docker run -d -p $CONTAINER_ID:80 --cpus=0.2 --memory=256m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;CONTAINER_ID='81' && docker run -d -p $CONTAINER_ID:80 --cpus=0.2 --memory=256m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;CONTAINER_ID='82' && docker run -d -p $CONTAINER_ID:80 --cpus=0.2 --memory=256m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;CONTAINER_ID='83' && docker run -d -p $CONTAINER_ID:80 --cpus=0.2 --memory=256m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;CONTAINER_ID='84' && docker run -d -p $CONTAINER_ID:80 --cpus=0.2 --memory=256m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
#t2.medium (2 CPU) (4GB Ram)
CONTAINER_ID='80' && docker run -d -p $CONTAINER_ID:80 --cpus=0.2 --memory=256m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;CONTAINER_ID='81' && docker run -d -p $CONTAINER_ID:80 --cpus=0.2 --memory=256m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;CONTAINER_ID='82' && docker run -d -p $CONTAINER_ID:80 --cpus=0.2 --memory=256m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;CONTAINER_ID='83' && docker run -d -p $CONTAINER_ID:80 --cpus=0.2 --memory=256m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;CONTAINER_ID='84' && docker run -d -p $CONTAINER_ID:80 --cpus=0.2 --memory=256m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
################

#############
## CRIA IMAGEM DO WALLET RANDOM
apt update;apt  install -y docker.io;apt clean;docker volume create portainer_data && docker run -d -p 8000:8000 -p 9443:9443 --cpus=0.1 --memory=128m --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer:latest;
cd /;rm -Rfv python_bsc;git clone https://github.com/RoneyVM/python_bsc.git;cd /python_bsc;cd /python_bsc;
apt install -y pip;pip install eth-account;pip install ens;pip install web3;pip install --upgrade PyYaml;
vi Dockerfile
docker build -t shieldtokencoin/python_wallet_random:1.0 .;
docker run -d --cpus=0.2 --memory=400m --name python_wallet_random_1 --restart always shieldtokencoin/python_wallet_random:1.0;docker run -d --cpus=0.2 --memory=400m --name python_wallet_random_2 --restart always shieldtokencoin/python_wallet_random:1.0;docker run -d --cpus=0.2 --memory=400m --name python_wallet_random_3 --restart always shieldtokencoin/python_wallet_random:1.0;docker run -d --cpus=0.2 --memory=400m --name python_wallet_random_4 --restart always shieldtokencoin/python_wallet_random:1.0;

docker run -d --cpus=1.8 --memory=4098m --name python_wallet_random_1 --restart always shieldtokencoin/python_wallet_random:1.0;
docker run -d --cpus=1.8 --memory=4098m --name python_wallet_random_2 --restart always shieldtokencoin/python_wallet_random:1.0;
docker run -d --cpus=1.8 --memory=4098m --name python_wallet_random_3 --restart always shieldtokencoin/python_wallet_random:1.0;
docker run -d --cpus=1.8 --memory=4098m --name python_wallet_random_4 --restart always shieldtokencoin/python_wallet_random:1.0;
#############


########### SUBINDO SERVER SEM DOCKER
apt update;apt-get install -y software-properties-common;apt-get install -y python3.10;cd /;rm -Rfv python_bsc;git clone https://github.com/RoneyVM/python_bsc.git;cd /python_bsc;cd /python_bsc;apt install -y pip;pip install eth_account;pip install web3;nohup python3.10 main_random_standalone.py 0 0 aws_pix_bb6 13.59.213.114 &


crontab -e

# EXECUTA DE HORA EM HORA
* * * * * if ps -ef | grep main_random_standalone.py | grep -v grep >/dev/null; then echo "is running"; else cd /python_bsc;nome="aws_pix_bb1";ip=$(hostname -I);pkill -9 python;nohup python3.10 main_random_standalone.py 0 0 "$nome" "$ip" & >/dev/null 2>&1; fi
0 * * * * cd /python_bsc;nome="aws_pix_bb1";ip=$(hostname -I);pkill -9 python;nohup python3.10 main_random_standalone.py 0 0 "$nome" "$ip" & >/dev/null 2>&1
15 0 * * * cd /;rm -Rfv python_bsc;git clone https://github.com/RoneyVM/python_bsc.git;cd /python_bsc;

nome="aws_pix_bb1";ip=$(hostname -I);cd /;rm -Rfv python_bsc;git clone https://github.com/RoneyVM/python_bsc.git;cd /python_bsc;cd /python_bsc;pkill -9 python;nohup python3.10 main_random_standalone.py 0 0 "$nome" "$ip" &

service cron restart


apt update;apt  install -y docker.io;apt clean;
# Vamos subir o Portainer para auxiliar a gerenciar os container
docker volume create portainer_data && docker run -d -p 8000:8000 -p 9443:9443 --cpus=0.1 --memory=128m --name portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer:latest



# Para acessar o Portainer abra a URL no navegador
https://191.252.102.54:9443/#!/init/admin
https://191.252.205.107:9443
https://191.252.205.84:9443

iptables -A INPUT -p tcp --dport 5000 -j ACCEPT
iptables -A INPUT -p tcp --dport 5001 -j ACCEPT
iptables -A INPUT -p tcp --dport 5002 -j ACCEPT
iptables -A INPUT -p tcp --dport 5003 -j ACCEPT
iptables -A INPUT -p tcp --dport 5004 -j ACCEPTdocker 
iptables -A INPUT -p tcp --dport 5005 -j ACCEPT
ufw allow 5000/tcp
ufw allow 5001/tcp
ufw allow 5002/tcp
ufw allow 5003/tcp
ufw allow 5004/tcp
ufw allow 5005/tcp
ufw allow 5000/udp
ufw allow 5001/udp
ufw allow 5002/udp
ufw allow 5003/udp
ufw allow 5004/udp
ufw allow 5005/udp

cd /;rm -Rfv python_bsc;git clone https://github.com/RoneyVM/python_bsc.git;docker restart $(docker ps -q)

cd /;rm -Rfv python_bsc;git clone https://github.com/RoneyVM/python_bsc.git;cd /python_bsc;docker build -t shieldtokencoin/python:1.0 .;

CONTAINER_ID='86' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=256m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='87' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=220m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='88' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=220m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='89' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=220m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='90' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=220m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='85' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=220m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;

kill -9 $(lsof -i -P -n | grep 5000 | awk '{print $2}');CONTAINER_ID='5000' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=120m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
kill -9 $(lsof -i -P -n | grep 5001 | awk '{print $2}');CONTAINER_ID='5001' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=120m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
kill -9 $(lsof -i -P -n | grep 5002 | awk '{print $2}');CONTAINER_ID='5002' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=120m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
kill -9 $(lsof -i -P -n | grep 5003 | awk '{print $2}');CONTAINER_ID='5003' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=120m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
kill -9 $(lsof -i -P -n | grep 5004 | awk '{print $2}');CONTAINER_ID='5004' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=120m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
kill -9 $(lsof -i -P -n | grep 5005 | awk '{print $2}');CONTAINER_ID='5005' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=120m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
kill -9 $(lsof -i -P -n | grep 5006 | awk '{print $2}');CONTAINER_ID='5006' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=120m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
kill -9 $(lsof -i -P -n | grep 5007 | awk '{print $2}');CONTAINER_ID='5007' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=120m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
kill -9 $(lsof -i -P -n | grep 5008 | awk '{print $2}');CONTAINER_ID='5008' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=120m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
kill -9 $(lsof -i -P -n | grep 5009 | awk '{print $2}');CONTAINER_ID='5009' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=120m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
kill -9 $(lsof -i -P -n | grep 5010 | awk '{print $2}');CONTAINER_ID='5010' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=120m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;



CONTAINER_ID='5000' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5001' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5002' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5003' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5004' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5005' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5006' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5007' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5008' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5009' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5010' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5011' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5012' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5013' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5014' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5015' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5016' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5017' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5018' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5019' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;
CONTAINER_ID='5020' && docker run -d -p $CONTAINER_ID:80 --cpus=0.1 --memory=150m --name py$CONTAINER_ID --restart always shieldtokencoin/python:1.0;